(function(definition){if(typeof breeze==="object"){definition(breeze)}else if(typeof require==="function"&&typeof exports==="object"&&typeof module==="object"){var b=require("breeze-client");definition(b)}else if(typeof define==="function"&&define["amd"]&&!window.breeze){define(["breeze-client"],definition)}else{throw new Error("Can't find breeze")}})(function(breeze){"use strict";angular.module("breeze.angular",[],["$provide",function($provide){$provide.provider({breeze:breezeProvider})}]);function breezeProvider(){breeze.config.initializeAdapterInstance("modelLibrary","backingStore",true);this.breeze=breeze;this.NamingConvention=breeze.NamingConvention;this.initializeDataServiceAdapter=initializeDataServiceAdapter;this.$get=["$http","$q",breezeFactory];function breezeFactory($http,$q){useNgHttp();useNgPromises();return breeze;function useNgHttp(){var ajax=breeze.config.initializeAdapterInstance("ajax","angular",true);ajax.setHttp($http)}function useNgPromises(){if(breeze.config.setQ){breeze.config.setQ($q);$q.resolve=$q.fcall=$q.when}else{throw new Error("Cannot use the breeze angular service with breeze.version="+breeze.version)}if(!breeze.Q){breeze.Q=$q}}}function initializeDataServiceAdapter(adapterName,isDefault){return breeze.config.initializeAdapterInstance("dataService",adapterName,isDefault)}}});